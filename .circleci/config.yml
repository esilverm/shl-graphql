version: 2.1


workflows:
  my-workflow:
    jobs:
      - build:
          context:
            - test
      - eslint
      - typescript
commands:
  install-node-example:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - node/install:
          node-version: '16.15'
      - run: node --version
  npm-install:
    steps:
      - install-node-example
      - run:
          name: Install npm dependencies 
          command: npm ci --prefer-offline 
jobs:
  eslint:
    docker:
      - image: circleci/node:18
    steps:
      - checkout
      - npm-install
      - run:
          name: Linter
          command: npm run lint
  typescript:
    docker:
      - image: circleci/node:18
    steps:
      - checkout
      - npm-install
      - run:
          name: typescript
          command: npm run typescript:check
  build:
    docker:
      - image: circleci/node:18

    steps:
      - checkout
      - npm-install
      - run:
          name: Install Rover
          command: |
            # Download and install Rover
            # This is pinned to a specific version for predictability in CI
            curl -sSL https://rover.apollo.dev/nix/v0.8.1 -k | sh

            # This allows the PATH changes to persist to the next `run` step
            echo 'export PATH=$HOME/.rover/bin:$PATH' >> $BASH_ENV

      # Start the GraphQL server.  If a different command is used to
      # start the server, use it in place of `npm start` here.
      - run:
          name: Starting server
          command: npm start --ignore-scripts
          background: true

      # make sure the server has enough time to start up before running
      # commands against it
      - run: sleep 5

      # When running on the 'main' branch, push the latest version
      # of the schema to Apollo Studio.
      - run: |
          if [ "${CIRCLE_BRANCH}" == "main" ]; then
            rover graph publish SHL-Index@current \
              --schema ./schema.graphql
          fi